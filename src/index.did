type SmartHomeDevice = record {
  id : text;
  isOn : bool;
  "type" : text;
  updatedAt : opt nat64;
  brand : text;
};
type _AzleResult = variant { Ok : SmartHomeDevice; Err : text };
type _AzleResult_1 = variant { Ok : opt SmartHomeDevice; Err : text };
type _AzleResult_2 = variant { Ok : vec SmartHomeDevice; Err : text };
service : () -> {
  addDevice : (SmartHomeDevice) -> (_AzleResult);
  deleteDevice : (text) -> (_AzleResult_1);
  getActiveDevices : () -> (_AzleResult_2) query;
  getDevice : (text) -> (_AzleResult) query;
  getDevices : () -> (_AzleResult_2) query;
  getDevicesByType : (text) -> (_AzleResult_2) query;
  searchDevices : (text) -> (_AzleResult_2) query;
  toggleDevice : (text) -> (_AzleResult);
  turnOffDevice : (text) -> (_AzleResult);
  turnOnDevice : (text) -> (_AzleResult);
  updateDevice : (text, SmartHomeDevice) -> (_AzleResult);
}